# TODO: this file is experimental, and its syntax is not yet currently supported by watchbind, but serves as inspiration for future feature additions

# Executed before the watched command is executed
initial-state = [ "set-state PWD -- pwd" ]

# All state variables are set as env variables in subshell where watched command is executed
watched-command = '''ls "$PWD"'''

# Since we reload after each operation that changes the output, a watch rate interval is not necessary.
# But we enable need periodic reloads in case some other processes manipulated the filesystem.
interval = 1

[keybindings]
# Move cursor up and down
"j" = [ "cursor down 1" ]
"k" = [ "cursor up 1" ]

# Create a new file (with random name)
# "n" = [ "exec -- touch $(mktemp new_file_XXXXXX.txt)", "reload" ]

# Create a new file
"n" = [
  "read-into NAME",
  '''exec -- touch "$PWD/$NAME"''',
  "unset-state NAME"
]

# Delete (multiple) files
"d" = [ "exec -- echo $LINES | xargs rm", "reload" ]

# Rename a file
"c" = [
  # Read user input (in a TUI text field) into a state variable INPUT
  "read-into NEW_NAME",
  '''exec -- mv "$PWD/$LINE" "$PWD/$NEW_NAME"''',
  # For performance reasons (creating different env variables for every different read creates overhead)
  "unset-state NEW_NAME"
]

# Open file (blocking)
"o" = [ "exec -- echo $LINES | xargs xdg-open" ]

# Traverse into and out of directories
"h" = [ 
  # PWD = parent dir of current dir
  '''set-state PWD -- (cd $PWD/..; pwd)''',
  "reload"
]
"l" = [ 
  '''set-state PWD -- echo "$PWD/$LINE"''',
  "reload"
]
